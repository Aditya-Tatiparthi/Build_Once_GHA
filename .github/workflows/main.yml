name: Pipeline

on: [push]
env: 
   APPLICATION_NAME: python-notebook
#    REGISTRY : "https://hub.docker.com/repository/docker/adityareddy369/pythondemo"
#    REGISTRY_CREDENTIAL : ${{secrets.DOCKER_USERNAME}} &&  ${{secrets.DOCKER_PASSWORD}}  
jobs:
  Build:
    runs-on : ubuntu-18.04
    steps:
    -  uses: actions/checkout@v1
    -  name: Setup Python Env
       uses: actions/setup-python@v2
    -  name: Install requirements
       run: pip install  --quiet --requirement requirement.txt
    -  name: Lint code
       run: |
         flake8  
    -  name: Run unit tests
       run: |
         python - m unitest  --verbose --failfast
#     - name: Build and tag image
#       run: docker build -t "dockerhuburllatest" .
#     - name: Push to docker hub image registry
#       run: docker push dockerhuburllatest
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
        
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
         username: ${{ secrets.DOCKER_HUB_USER }}
         password: ${{ secrets.DOCKER_HUB_PASS }}
      
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
          context: .
          file: ./Dockerfile
          pull: true
          push: true
          cache-from: type=registry,ref=adityareddy369/pythondemo          
          cache-to: type=inline
          tags: adityareddy369/pythondemo
#           build-args: PROFILE=nectar,ARG2=test
  DeployDev:
    name: Deploy to Dev 
    needs: [Build]
    runs-on: ubuntu-18.04
    environment: 
      name: Development
      
    steps:
      - name: Deploy
        run: echo I am deploying! 

  DeployStaging:
    name: Deploy to Staging 
    
    needs: [Build]
    runs-on: ubuntu-18.04
    environment: 
      name: Staging
    steps:
      - name: Deploy
        run: echo I am deploying! 

#   DeployProd:
#     name: Deploy to Production 
#     needs: [DeployStaging]
#     runs-on: ubuntu-latest
#     environment: 
#       name: Prod
      
#     steps:
#       - name: Deploy
#         run: echo I am deploying! 
