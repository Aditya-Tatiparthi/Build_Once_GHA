name: Pipeline

on: [push]
# env: 
#   CONTENT_PATH: ${{ github.workspace }}/test_directory
#   TARGET_DIRECTORY: ${{ github.workspace }}/target_directory 
#   ARTIFACT_NAME: Notebook   
jobs:
  Build:
    runs-on : ubuntu-18.04
    steps:
    -  uses: actions/checkout@v1
    -  name: Setup Python Env
       uses: actions/setup-python@v2
    -  name: Install requirements
       run: |
          pip install  --quiet --requirement requirement.txt
          pip install check-wheel-contents
    -  name: python setup.py bdist_wheel
       run: python -m pip install --upgrade pip
    -  name: Lint code
       run: |
         flake8  
    -  name: Run unit tests
       run: |
         python - m unitest  --verbose --failfast
#     - run: mkdir -p path/to/artifact

#     - run: echo python > ${{ env.TARGET_DIRECTORY }}
#     - name: Publish Artifact Notebook
#       uses: actions/upload-artifact@v2
#       with:
#          name: ${{ env.ARTIFACT_NAME }}
#          path: ${{ env.TARGET_DIRECTORY }}
    - name: Step 1 - Create a temporary artifact downloads folder
      run: mkdir downloads
        
    - name: step 2 - Add artifacts to publish to the temp folder
      run: |
          cd downloads
          echo 'alpha'    > alpha.html
          echo 'bravo'    > bravo.html
          echo 'charlie'  > charlie.html
          cd ..
    
    - name: Step 3 - Use the Upload Artifact GitHub Action
      uses: actions/upload-artifact@v2
      with: 
          name: assets-for-download
          path: downloads

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v1
        
#     - name: Login to DockerHub
#       uses: docker/login-action@v1
#       with:
#          username: ${{ secrets.DOCKER_HUB_USER }}
#          password: ${{ secrets.DOCKER_HUB_PASS }}
      
#     - name: Build and push
#       uses: docker/build-push-action@v2
#       with:
#           context: .
#           file: ./Dockerfile
#           pull: true
#           push: true
#           cache-from: type=registry,ref=adityareddy369/pythondemo          
#           cache-to: type=inline
#           tags: adityareddy369/pythondemo
#           build-args: PROFILE=nectar,ARG2=test
  DeployDev:
    name: Deploy to Dev 
    needs: [Build]
    runs-on: ubuntu-18.04
    environment: 
      name: Development
      
    steps:
      - name: Deploy
        run: echo I am deploying! 

  DeployStaging:
    name: Deploy to Staging 
    
    needs: [Build]
    runs-on: ubuntu-18.04
    environment: 
      name: Staging
    steps:
      - name: Deploy
        run: echo I am deploying! 

#   DeployProd:
#     name: Deploy to Production 
#     needs: [DeployStaging]
#     runs-on: ubuntu-latest
#     environment: 
#       name: Prod
      
#     steps:
#       - name: Deploy
#         run: echo I am deploying! 
